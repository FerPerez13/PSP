package Ejercicios1;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.ServerSocket;

public class ServidorSocketStream {
	public static void main(String[] args) {
		/*
		 * try { System.out.println("Creando socket servidor"); ServerSocket
		 * serverSocket = new ServerSocket();
		 * System.out.println("Realizando el bind"); InetSocketAddress addr =
		 * new InetSocketAddress("localhost", 5555); serverSocket.bind(addr);
		 * System.out.println("Aceptando conexiones"); Socket newSocket =
		 * serverSocket.accept(); System.out.println("Conexi√≥n recibida");
		 * InputStream is = newSocket.getInputStream(); OutputStream os =
		 * newSocket.getOutputStream(); byte[] mensaje = new byte[50];
		 * is.read(mensaje); System.out.println("Mensaje recibido:" + new
		 * String(mensaje)); System.out.println("Cerrando el nuevo socket");
		 * newSocket.close(); System.out.println("Cerrando el socket servidor");
		 * serverSocket.close(); System.out.println("Terminado"); } catch
		 * (IOException e) { e.printStackTrace(); }
		 */
		int sockets = 0;
		while (sockets < 5) {
			HiloServidor hilo = new HiloServidor();
			sockets++;
		}

	}

public class HiloServidor extends Thread{
	
	private InetSocketAddress address = new InetSocketAddress("localhost", 5555);
	private Socket socket;
	
	public HiloServidor(){
		this.socket=socket;
		
	}
	
	public void run() {
		try {
			ServerSocket serverSocket = new ServerSocket();
			serverSocket.bind(address);
			Socket newSocket = serverSocket.accept();
			InputStream is = newSocket.getInputStream();
			OutputStream os = newSocket.getOutputStream();
			byte[] msg = new byte[100];
			is.read(msg);
			System.out.println("Mensaje recibido:" + new String(msg));
			newSocket.close();
			serverSocket.close();
		} catch (IOException e) {
			// TODO: handle exception
		}

	}
}