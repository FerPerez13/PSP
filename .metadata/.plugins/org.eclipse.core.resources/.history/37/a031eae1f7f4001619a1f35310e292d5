package Telefono;

import java.io.*;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;

public class ServidorTelefono extends Thread{
	
	private Socket clientSocket;
	
	public ServidorTelefono(Socket socket){
		clientSocket = socket;
	}
	
	
	public void run() {
		try {
			System.out.println("Arrancando Hilo");
			
			//Conexiones entre Cliente-Servidor
			InputStream iStream = clientSocket.getInputStream();
			OutputStream oStream = clientSocket.getOutputStream();
			
			
			//Buffers de comunicacion
			BufferedWriter bWriter = new BufferedWriter(new OutputStreamWriter(oStream));
			BufferedReader bReader = new BufferedReader(new InputStreamReader(iStream));
			
			//Lectores y Escritores del documento
			File archivo = new File("telefonos.txt");
			//FileReader fReader = new FileReader(archivo);
			//FileWriter fWriter = new FileWriter(archivo, true);
			
			//Buffers del Documento
			//BufferedWriter bufWriter = new BufferedWriter(fWriter);
			//BufferedReader bufReader = new BufferedReader(fReader);
			
			
			String mensaje = bReader.readLine();
			bReader.close();
			System.out.println("Mensaje recibido"+mensaje);
			
			//TODO: Hay que conseguir que el hilo no se cierre.porque no me coje el mensaje. 
			//Cojo el Cliente de Moreno para ver que pasa y lo tengo que utilizar en casa con los 2 pc's
			
			if(mensaje.compareToIgnoreCase("1")==0){
				//Enviar todo lo que haya en el TXT al cliente
				FileReader fReader = new FileReader(archivo);
				BufferedReader bufReader = new BufferedReader(fReader);

				
				System.out.println("Enviando agenda");
				String lineaAgenda;
				while ((lineaAgenda=bufReader.readLine())!=null) { //Aqui no está entrando, se queda pillado. ES EL PUTO readLine()!!!!!
					System.out.println(lineaAgenda);
					bWriter.write((lineaAgenda+"\r\n"));
				}
				//bWriter.close();
				//bReader.close();
				bufReader.close();
			}else{
				//Guardar lo que nos llegue en el fichero TXT
				System.out.println("Leyendo para guardar nuevo agenda");
				
				FileWriter fWriter = new FileWriter(archivo, true);
				BufferedWriter bufWriter = new BufferedWriter(fWriter);

				String mensaje2 = bReader.readLine();
				bReader.close();
				System.out.println(mensaje2);
				bufWriter.write(mensaje2);
				System.out.println("Datos leidos y guardados");
				bufWriter.close();

			}
			bReader.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String args[]) throws IOException{
		
		System.out.println("Iniciando el servidor");
		System.out.println("Esperando conexiones...");
		ServerSocket serverSocket = null;
		
		try {
			serverSocket = new ServerSocket();
			InetSocketAddress addr = new InetSocketAddress("192.168.26.41", 5555); //Direccion de clase
			//InetSocketAddress addr = new InetSocketAddress("192.168.1.111", 5555); //Direccion de casa

			serverSocket.bind(addr);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		while(serverSocket!=null){
			try {
				Socket newSocket = serverSocket.accept();
				System.out.println("Conexión recibida");
				
				
				
				InputStream iStream = clientSocket.getInputStream();
				OutputStream oStream = clientSocket.getOutputStream();
				
				
				//Buffers de comunicacion
				BufferedWriter bWriter = new BufferedWriter(new OutputStreamWriter(oStream));
				BufferedReader bReader = new BufferedReader(new InputStreamReader(iStream));
				
				//Lectores y Escritores del documento
				File archivo = new File("telefonos.txt");
				//FileReader fReader = new FileReader(archivo);
				//FileWriter fWriter = new FileWriter(archivo, true);
				
				//Buffers del Documento
				//BufferedWriter bufWriter = new BufferedWriter(fWriter);
				//BufferedReader bufReader = new BufferedReader(fReader);
				
				
				String mensaje = bReader.readLine();
				bReader.close();
				System.out.println("Mensaje recibido"+mensaje);
				
				//TODO: Hay que conseguir que el hilo no se cierre.porque no me coje el mensaje. 
				//Cojo el Cliente de Moreno para ver que pasa y lo tengo que utilizar en casa con los 2 pc's
				
				if(mensaje.compareToIgnoreCase("1")==0){
					//Enviar todo lo que haya en el TXT al cliente
					FileReader fReader = new FileReader(archivo);
					BufferedReader bufReader = new BufferedReader(fReader);

					
					System.out.println("Enviando agenda");
					String lineaAgenda;
					while ((lineaAgenda=bufReader.readLine())!=null) { //Aqui no está entrando, se queda pillado. ES EL PUTO readLine()!!!!!
						System.out.println(lineaAgenda);
						bWriter.write((lineaAgenda+"\r\n"));
					}
					//bWriter.close();
					//bReader.close();
					bufReader.close();
				}else{
					//Guardar lo que nos llegue en el fichero TXT
					System.out.println("Leyendo para guardar nuevo agenda");
					
					FileWriter fWriter = new FileWriter(archivo, true);
					BufferedWriter bufWriter = new BufferedWriter(fWriter);

					String mensaje2 = bReader.readLine();
					bReader.close();
					System.out.println(mensaje2);
					bufWriter.write(mensaje2);
					System.out.println("Datos leidos y guardados");
					bufWriter.close();

				}
				bReader.close();
				
			} catch (Exception e) {
				e.printStackTrace();
			}
				
				
				
				
				
				
				
				
				
//				
//				ServidorTelefono hilo = new ServidorTelefono(newSocket);
//				hilo.start();
			} catch (IOException e) {
				// TODO: handle exception
			}
		}
		
		System.out.println("Terminado");
	}

}
